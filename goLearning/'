package main

import (
    "fmt"
    "strings"
)

// consts get evaluated at compile time
const RANDOM_NUM = 1 // do not need type
const PI float32 = 3.19

type Gender int 
const (
    UNKNOWN = iota
    FEMALE
    MALE
)

func printingStuff() {
    value := 1
    fmt.Printf("%d\n", value)
    floatVal := 3.2
    fmt.Printf("%g\n", floatVal)
    digitVal := 12345
    fmt.Printf("%01d\n", digitVal) // shows integer with n digits
    // Complex numbers
    var c1 complex64 = 5 + 10i
    fmt.Printf("Complex value: %v\n", c1)
    // Character types
    var ch byte = 'A'
    var ch1 byte = 65
    var ch2 byte = '\x41'
    fmt.Printf("Same right? %c %c %c\n", ch, ch1, ch2)
}

func stringsStuff() {
    // Go strings can vary from 1 - 4 bytes, smart enough to know which to use
    // Strings are immutable array of bytes
    interpretedString := "this is an interpreted string using \"\" double quotes"
    rawString := `this is a raw string \n is taken literally`
    fmt.Printf("%s\n", interpretedString)
    fmt.Printf("%s\n", rawString)
    // Strings in Go do not terminate with a special character \0 like in C and C++
    
    // Prefix and suff
    var str string = "This is an nice example of an example string"
    fmt.Printf("Is there prefix: %t\n", strings.HasPrefix(str, "Th"))
    fmt.Printf("Is there suffix: %t\n", strings.HasSuffix(str, "ing"))

    // Can also test for substring
    str1 := "example"
    fmt.Printf("Is \"%s\" a substring of \"%s\": %t\n", str1, str, strings.Contains(str, str1)) 
    var index int = strings.Index(str, str1)
    var lastIndex int = strings.LastIndex(str, str1)
    var substringCount int = strings.Count(str, str1)
    // For non ASCII chars, use strings.IndexRune()
    fmt.Printf("Substring index: %d, last index: %d, count: %d\n", index, lastIndex, substringCount)

    // Replacing Substring
    strReplaced := strings.Replace(str, "example", "hello", 1)    
    fmt.Println(strReplaced)
    // Repeating a string
    repeatedString := strings.Repeat(str, 2)
    fmt.Println(repeatedString)

    // Changing case of the string 
    upperCase = 
}

func main() {
    printingStuff()
    stringsStuff()
}

